---
import Layout from "../../layouts/Layout.astro";

import SectionPageTitle from "../../components/SectionPageTitle.astro";
import PageSection from "../../components/PageSection.astro";
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import TuneDots from "../../components/lakeland-fiddlers/TuneDots.astro";
import TuneMetaData from "../../components/lakeland-fiddlers/TuneMetaData.astro";

import { getCollection } from "astro:content";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const tunes = await getCollection("tunes");
  return tunes.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();

const breadcrumbs = [
  { href: "/tunes", text: "Tunes" },
  { href: "/tunes" + entry.slug, text: entry.data.title },
];
const tuneMeta = entry.data.tuneMeta ? entry.data.tuneMeta : false;
const dots = entry.data.dots;
console.log(entry.data);
---

<Layout>
  <SectionPageTitle pageTitle={entry.data.title}
    ><Breadcrumbs links={breadcrumbs} /></SectionPageTitle
  >
  {
    tuneMeta && (
      <PageSection>
        <TuneMetaData tuneMeta={tuneMeta} />
      </PageSection>
    )
  }
  {
    dots &&
      dots.map((dots) => (
        <PageSection>
          <TuneDots tuneDots={dots} />
        </PageSection>
      ))
  }
  {
    Content && (
      <PageSection>
        <div class="prose prose-h2:font-headers">
          <Content />
        </div>
      </PageSection>
    )
  }
</Layout>
