---
import Link from "../Link.astro";

const { tuneMeta } = Astro.props;

import { getCollection, getEntry } from "astro:content";
const relatedTunes = tuneMeta.relatedTunes
  ? await getCollection("tunes", ({ slug, data }) => {
      return tuneMeta.relatedTunes.includes(data.title);
    })
  : [];

// console.log(tuneMeta)
---
<div class="space-y-2">
{tuneMeta.rhythm ? <p>Rhythm: {tuneMeta.rhythm}</p> : null}
{tuneMeta.source ? <p>Source: {tuneMeta.source}</p> : null}
{tuneMeta.date ? <p>Date: {tuneMeta.date}</p> : null}
{
  tuneMeta.relatedLinks && tuneMeta.relatedLinks.length > 0 && (
    <div class="flex flex-wrap items-center gap-2">
      <p>Related links:</p>
      <ol class="flex flex-wrap items-center gap-2">
        {tuneMeta.relatedLinks.map((relatedLink) => (
          <li>
            <Link href={relatedLink.link.url}>
              {relatedLink.link.text}
            </Link>
          </li>
        ))}
      </ol>
    </div>
  )
}
{
  relatedTunes && relatedTunes.length > 0 && (
    <div class="flex flex-wrap items-center">
      <p class="mr-2">Related tunes:</p>
      <ol class="flex flex-wrap items-center gap-2">
        {relatedTunes.map((relatedTune) => (
          <li>
            <Link href={`/tunes/${relatedTune.slug}`}>
              {relatedTune.data.title}
            </Link>
          </li>
        ))}
      </ol>
    </div>
  )
}
</div>